name: Test .NET API

on: push

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.201'

      - name: Install dependencies
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
        run: dotnet restore

      - name: Build
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
        run: dotnet build --configuration Release --no-restore

      - name: Start Docker
        env:
          COMPOSE_HTTP_TIMEOUT: 320
        run: docker-compose -f docker/dev/docker-compose.yml up -d

      - name: Test
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput='./coverage.info' /p:Exclude="[xunit.*]*%2c[*]SQE.API.Server.Helpers.EmailSender%2c[*]SQE.API.Server.Helpers.StartupChecks%2c[*]SQE.API.Server.Program%2c[*]SQE.DatabaseAccess.Helpers.ApiException%2c[*]SQE.DatabaseAccess.Helpers.StandardExceptions%2c[*]GenerateTestRequestObjects%2c[*]GenerateTypescriptDTOs%2c[*]GenerateTypescriptInterfaces%2c[*]Program%2c[*]sqe_realtime_hub_builder%2c[*]" -l "console;verbosity=diagnostic" --blame
        
      - name: Debug possible failure
        if: failure()
        run: find ./sqe-api-test/TestResults -name 'Sequence*.xml' | xargs cat

      - name: Report coverage
        if: success()
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./sqe-api-test/coverage.info