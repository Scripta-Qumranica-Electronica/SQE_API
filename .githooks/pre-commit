#!/bin/sh

# We check here that private settings have not accidentally been left in appsettings.json,
# or in docker-compose.yml.

function check_docker_vars
{
    grep -n '\-[[:space:]]'"${1}"'=[^$]' docker/deploy/docker-compose.yml
    if [[ "$?" == 0 ]]; then 
        echo "Please remove the custom settings for ${1} from docker/deploy/docker-compose.yml"
        echo "The line should be:"
        echo "#- ${1}="
        exit 1
    fi
}

function check_appsettings_vars
{
    grep -n '"'"${1}"'"[ ]*:[ ]*"[^"].*,.*$' sqe-api-server/appsettings.json 
    if [[ "$?" == 0 ]]; then 
        echo "Please remove the custom settings for ${1} from sqe-api-server/appsettings.json"
        echo "The line should be:"
        echo "\"${1}\": \"\","
        exit 1
    fi
    
    grep -n '"'"${1}"'"[ ]*:[ ]*"[^"].*,.*$' sqe-api-server/appsettings.Development.json 
    if [[ "$?" == 0 ]]; then 
        echo "Please remove the custom settings for ${1} from sqe-api-server/appsettings.Development.json"
        echo "The line should be:"
        echo "\"${1}\": \"\","
        exit 1
    fi
}

## Checking for custom settings in docker/deploy/docker-compose.yml
echo "Checking for private data in docker/deploy/docker-compose.yml"
check_docker_vars "MAILER_EMAIL_ADDRESS"
check_docker_vars "MAILER_EMAIL_USERNAME"
check_docker_vars "MAILER_EMAIL_PASSWORD"
check_docker_vars "MAILER_EMAIL_SMTP_URL"
check_docker_vars "MAILER_EMAIL_SMTP_PORT"
check_docker_vars "WEBSITE_HOST"

## Checking for custom settings in sqe-api-server/appsettings.json
echo "Checking for private data in sqe-api-server/appsettings.json"
check_appsettings_vars "MailerEmailAddress"
check_appsettings_vars "MailerEmailUsername"
check_appsettings_vars "MailerEmailPassword"
check_appsettings_vars "MailerEmailSmtpUrl"
check_appsettings_vars "MailerEmailSmtpPort"

## We autogenerate the Hub methods from the Controllers
function generate_hubs
{
    dotnet run --project sqe-realtime-hub-builder/sqe-realtime-hub-builder.csproj
}

## Generating Hub Methods
echo "Autogenerating realtime Hub methods"
generate_hubs

## We run the "linter" to ensure the code remains formatted consistently
function cleanup_code
{
    ## Check that dotnet-format is installed
    if ! dotnet tool list -g | grep "dotnet-format"; then
        dotnet tool install -g dotnet-format
    fi
    
    dotnet format
}

## Cleaning up code formatting
echo "Cleaning up code formatting"
cleanup_code

## We generate the ts definitions for the C# DTOs before pushing
function generate_ts_from_dtos
{
    dotnet build Utilities/GenerateTypescriptDTOs
    dotnet build sqe-dto
    dotnet Utilities/GenerateTypescriptDTOs/bin/Debug/netcoreapp2.2/GenerateTypescriptDTOs.dll sqe-dto/bin/Debug/netcoreapp2.2/sqe-dto.dll ts-dtos/sqe-dtos.ts 
}

## Generating typescript definitions
echo "Generating typescript dto definitions"
generate_ts_from_dtos

## Now add any updated files
git add -A