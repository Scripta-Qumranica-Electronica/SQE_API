/* tslint:disable */

/*
 * Do not edit this file directly!
 * This set of interfaces and enums is autogenerated by `GenerateTypescriptDTOs` 
 * in the project https://github.com/Scripta-Qumranica-Electronica/SQE_API.
 * Changes made there are used to automatically create this file at {ROOT}/ts-dtos
 * whenever the GenerateTypescriptDTOs program is run.
 */


export interface editionScriptCollectionDTO {
    letters: CharacterShapeDTO[] | null;
}

export interface editionScriptLinesDTO {
    textFragments: ScriptTextFragmentDTO[] | null;
}

export interface characterShapeDTO {
    id: number;
    character: char | null;
    polygon: string | null;
    imageURL: string | null;
    rotation: float | null;
    attributes: string[] | null;
}

export interface scriptTextFragmentDTO {
    textFragmentName: string | null;
    textFragmentId: number;
    lines: ScriptLineDTO[] | null;
}

export interface scriptLineDTO {
    lineName: string | null;
    lineId: number;
    artefacts: ScriptArtefactCharactersDTO[] | null;
}

export interface scriptArtefactCharactersDTO {
    artefactName: string | null;
    artefactId: number;
    placement: PlacementDTO | null;
    characters: SignInterpretationDTO[] | null;
}

export interface textFragmentDataDTO {
    id: number;
    name: string | null;
    editorId: number;
}

export interface artefactTextFragmentMatchDTO {
    suggested: boolean;
}

export interface imagedObjectTextFragmentMatchDTO {
    editionId: number;
    manuscriptName: string | null;
    textFragmentId: number;
    textFragmentName: string | null;
    side: string | null;
}

export interface textFragmentDataListDTO {
    textFragments: TextFragmentDataDTO[] | null;
}

export interface artefactTextFragmentMatchListDTO {
    textFragments: ArtefactTextFragmentMatchDTO[] | null;
}

export interface textFragmentDTO {
    textFragmentId: number;
    textFragmentName: string | null;
    editorId: number;
    lines: LineDTO[] | null;
}

export interface lineDataDTO {
    lineId: number;
    lineName: string | null;
}

export interface lineDataListDTO {
    lines: LineDataDTO[] | null;
}

export interface lineDTO {
    lineId: number;
    lineName: string | null;
    editorId: number;
    signs: SignDTO[] | null;
}

export interface lineTextDTO {
    licence: string | null;
    editors: { [key: string] : EditorDTO } | null;
}

export interface updateTextFragmentDTO {
    name: string | null;
    previousTextFragmentId: number | null;
    nextTextFragmentId: number | null;
}

export interface createTextFragmentDTO {
    name: string;
}

export interface signDTO {
    signInterpretations: SignInterpretationDTO[] | null;
}

export interface nextSignInterpretationDTO {
    nextSignInterpretationId: number;
    editorId: number;
}

export interface signInterpretationDTO {
    signInterpretationId: number;
    character: string | null;
    attributes: InterpretationAttributeDTO[] | null;
    rois: InterpretationRoiDTO[] | null;
    nextSignInterpretations: NextSignInterpretationDTO[] | null;
}

export interface interpretationAttributeDTO {
    interpretationAttributeId: number;
    sequence: number;
    attributeValueId: number;
    attributeValueString: string | null;
    editorId: number;
    value: float | null;
}

export interface placementDTO {
    scale: number;
    rotate: number;
    zIndex: number;
    translate: TranslateDTO | null;
}

export interface translateDTO {
    x: number;
    y: number;
}

export interface simpleImageDTO {
    id: number;
    url: string | null;
    lightingType: Lighting | null;
    lightingDirection: Direction | null;
    waveLength: string[] | null;
    type: string | null;
    side: string | null;
    ppi: number;
    master: boolean;
    catalogNumber: number;
}

export interface imageDTO {
    imageToImageMapEditorId: number | null;
    regionInMasterImage: string | null;
    regionInImage: string | null;
    transformToMaster: string | null;
}

export interface simpleImageListDTO {
    images: SimpleImageDTO[] | null;
}

export interface imageInstitutionDTO {
    name: string | null;
}

export interface imageInstitutionListDTO {
    institutions: ImageInstitutionDTO[] | null;
}

export interface institutionalImageDTO {
    id: string | null;
    thumbnailUrl: string | null;
    license: string | null;
}

export interface institutionalImageListDTO {
    institutionalImages: InstitutionalImageDTO[] | null;
}

export interface artefactDataDTO {
    id: number;
    name: string;
}

export interface artefactDTO {
    editionId: number;
    imagedObjectId: string;
    imageId: number;
    artefactDataEditorId: number;
    mask: string;
    artefactMaskEditorId: number;
    isPlaced: boolean;
    placement: PlacementDTO;
    artefactPlacementEditorId: number | null;
    side: string;
    statusMessage: string | null;
}

export interface artefactSide {
    
}

export interface artefactListDTO {
    artefacts: ArtefactDTO[];
}

export interface artefactDataListDTO {
    artefacts: ArtefactDataDTO[];
}

export interface artefactGroupDTO {
    id: number;
}

export interface artefactGroupListDTO {
    artefactGroups: ArtefactGroupDTO[] | null;
}

export interface updateArtefactDTO {
    mask: string | null;
    placement: PlacementDTO | null;
    name: string | null;
    statusMessage: string | null;
}

export interface updateArtefactPlacementDTO {
    artefactId: number;
    isPlaced: boolean;
    placement: PlacementDTO | null;
}

export interface batchUpdateArtefactPlacementDTO {
    artefactPlacements: UpdateArtefactPlacementDTO[];
}

export interface updatedArtefactPlacementDTO {
    placementEditorId: number;
}

export interface batchUpdatedArtefactTransformDTO {
    artefactPlacements: UpdatedArtefactPlacementDTO[];
}

export interface updateArtefactGroupDTO {
    
}

export interface createArtefactDTO {
    masterImageId: number;
    mask: string;
}

export interface createArtefactGroupDTO {
    name: string | null;
    artefacts: number[];
}

export interface editionDTO {
    id: number;
    name: string | null;
    editionDataEditorId: number;
    permission: PermissionDTO | null;
    owner: UserDTO | null;
    thumbnailUrl: string | null;
    shares: DetailedEditorRightsDTO[] | null;
    metrics: EditionManuscriptMetricsDTO | null;
    locked: boolean;
    isPublic: boolean;
    lastEdit: Date | null;
    copyright: string | null;
}

export interface editionGroupDTO {
    primary: EditionDTO | null;
    others: EditionDTO[] | null;
}

export interface editionListDTO {
    editions: List<EditionDTO>[] | null;
}

export interface permissionDTO {
    mayRead: boolean;
    mayWrite: boolean;
    isAdmin: boolean;
}

export interface updateEditorRightsDTO {
    mayLock: boolean;
}

export interface inviteEditorDTO {
    email: string;
}

export interface detailedEditorRightsDTO {
    email: string;
    editionId: number;
}

export interface detailedUpdateEditorRightsDTO {
    editionId: number;
    editionName: string | null;
    date: Date | null;
}

export interface adminEditorRequestDTO {
    editorName: string | null;
    editorEmail: string | null;
}

export interface editorInvitationDTO {
    token: Guid | null;
    requestingAdminName: string | null;
    requestingAdminEmail: string | null;
}

export interface editorInvitationListDTO {
    editorInvitations: EditorInvitationDTO[] | null;
}

export interface adminEditorRequestListDTO {
    editorRequests: AdminEditorRequestDTO[] | null;
}

export interface textEditionDTO {
    manuscriptId: number;
    editionName: string | null;
    editorId: number;
    licence: string | null;
    editors: { [key: string] : EditorDTO } | null;
    textFragments: TextFragmentDTO[] | null;
}

export interface deleteTokenDTO {
    editionId: number;
    token: string | null;
}

export interface deleteEditionEntityDTO {
    entityId: number;
    editorId: number;
}

export interface deleteDTO {
    entity: EditionEntities | null;
    ids: number[] | null;
}

export interface editionUpdateRequestDTO {
    metrics: UpdateEditionManuscriptMetricsDTO | null;
}

export interface editionCopyDTO {
    name: string | null;
    copyrightHolder: string | null;
    collaborators: string | null;
}

export interface updateEditionManuscriptMetricsDTO {
    width: number;
    height: number;
    xOrigin: number;
    yOrigin: number;
}

export interface editionManuscriptMetricsDTO {
    ppi: number;
    editorId: number;
}

export interface loginRequestDTO {
    email: string;
    password: string;
}

export interface userUpdateRequestDTO {
    password: string | null;
    email: string | null;
    organization: string | null;
    forename: string | null;
    surname: string | null;
}

export interface newUserRequestDTO {
    email: string;
    password: string;
}

export interface accountActivationRequestDTO {
    token: string;
}

export interface resendUserAccountActivationRequestDTO {
    email: string;
}

export interface unactivatedEmailUpdateRequestDTO {
    newEmail: string;
}

export interface resetUserPasswordRequestDTO {
    email: string;
}

export interface resetForgottenUserPasswordRequestDTO {
    password: string;
}

export interface resetLoggedInUserPasswordRequestDTO {
    oldPassword: string;
    newPassword: string;
}

export interface userDTO {
    userId: number;
    email: string | null;
}

export interface detailedUserDTO {
    forename: string | null;
    surname: string | null;
    organization: string | null;
    activated: boolean;
}

export interface detailedUserTokenDTO {
    token: string | null;
}

export interface editorDTO {
    email: string | null;
    forename: string | null;
    surname: string | null;
    organization: string | null;
}

export interface imageStackDTO {
    id: number | null;
    images: ImageDTO[] | null;
    masterIndex: number | null;
}

export interface imagedObjectDTO {
    id: string | null;
    recto: ImageStackDTO | null;
    verso: ImageStackDTO | null;
    artefacts: ArtefactDTO[] | null;
}

export interface imagedObjectListDTO {
    imagedObjects: ImagedObjectDTO[] | null;
}

export interface wktPolygonDTO {
    wktPolygon: string | null;
}

export interface setInterpretationRoiDTO {
    artefactId: number;
    signInterpretationId: number | null;
    shape: string;
    translate: TranslateDTO;
    stanceRotation: ushort | null;
    exceptional: boolean;
    valuesSet: boolean;
}

export interface interpretationRoiDTO {
    interpretationRoiId: number;
    editorId: number;
}

export interface updatedInterpretationRoiDTO {
    oldInterpretationRoiId: number;
}

export interface setInterpretationRoiDTOList {
    rois: SetInterpretationRoiDTO[];
}

export interface interpretationRoiDTOList {
    rois: InterpretationRoiDTO[];
}

export interface updatedInterpretationRoiDTOList {
    rois: UpdatedInterpretationRoiDTO[];
}

export interface batchEditRoiDTO {
    createRois: InterpretationRoiDTO[] | null;
    updateRois: UpdatedInterpretationRoiDTO[] | null;
    deleteRois: number[] | null;
}

export interface batchEditRoiResponseDTO {
    createRois: InterpretationRoiDTO[];
    updateRois: UpdatedInterpretationRoiDTO[];
    deleteRois: number[];
}

export interface catalogueMatchInputDTO {
    catalogSide: SideDesignation | null;
    imagedObjectId: string;
    manuscriptId: number;
    editionName: string | null;
    editionVolume: string | null;
    editionLocation1: string | null;
    editionLocation2: string | null;
    editionSide: SideDesignation | null;
    comment: string | null;
    textFragmentId: number;
    editionId: number;
    confirmed: boolean | null;
}

export interface catalogueMatchDTO {
    imageCatalogId: number;
    institution: string | null;
    catalogueNumber1: string | null;
    catalogueNumber2: string | null;
    proxy: string | null;
    url: string | null;
    filename: string | null;
    suffix: string | null;
    thumbnail: string | null;
    license: string | null;
    iaaEditionCatalogueId: number;
    manuscriptName: string | null;
    name: string | null;
    matchAuthor: string | null;
    matchConfirmationAuthor: string | null;
    matchId: number;
    dateOfMatch: Date | null;
    dateOfConfirmation: Date | null;
}

export interface catalogueMatchListDTO {
    matches: CatalogueMatchDTO[] | null;
}

export enum Direction {
    left = 0,
    right = 1,
    top = 2,
}

export enum Lighting {
    direct = 0,
    raking = 1,
}

export enum EditionEntities {
    edition = 0,
    artefact = 1,
    artefactGroup = 2,
    textFragment = 3,
    line = 4,
    signInterpretation = 5,
    roi = 6,
}

export enum SideDesignation {
    recto = 0,
    verso = 1,
}
